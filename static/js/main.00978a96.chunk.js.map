{"version":3,"sources":["services/use-space-x.js","components/base/error.js","services/styling.js","components/base/breadcrumbs.js","components/base/load-more-button.js","components/content/launches/launch-item.js","utils/format-date.js","services/favorites.js","components/content/favorites/favorite-item.js","components/layout/layout-drawer.js","hooks/use-local-storage.js","components/content/launches/launches.js","components/base/tooltip.js","components/content/launches/launch.js","components/pages/home/home.js","components/content/launch-pads/launch-pad-item.js","components/content/launch-pads/launch-pads.js","components/content/launch-pads/launch-pad.js","components/app.js","index.js"],"names":["fetcher","a","fetch","response","ok","Error","statusText","json","getSpaceXUrl","path","options","searchParams","URLSearchParams","property","append","process","toString","useSpaceX","endpointUrl","useSWR","useSpaceXPaginated","useSWRInfinite","pageIndex","previousPageData","length","offset","limit","Flex","alignItems","justifyContent","width","Alert","status","variant","flexDirection","textAlign","p","size","mr","mt","mb","fontSize","maxWidth","Theme","bgColor","light","lightBg","dark","darkBg","textColor","lightModeText","darkModeText","bgColorNavbar","navbarLightBg","navbarDarkBg","bgColorButton","buttonLightBg","buttonDarkBg","bgColorCard","cardLightBg","cardDarkBg","borderColorCard","cardLightBorder","cardDarkBorder","tileColorCard","cardLightTile","cardDarkTile","Breadcrumbs","items","colorMode","useColorMode","Breadcrumb","spacing","separator","Box","as","ChevronsRight","color","map","item","index","isCurrentPage","key","label","undefined","Link","to","LoadMoreButton","loadMore","data","pageSize","isLoadingMore","isReachingEnd","my","Button","onClick","disabled","Spinner","LaunchItem","timestamp","launch","favorites","toggleFavorite","flight_number","boxShadow","borderWidth","rounded","overflow","position","bg","borderColor","Image","src","links","flickr_images","replace","mission_patch_small","alt","mission_name","height","objectFit","objectPosition","top","right","d","launch_success","Badge","px","variantColor","fontWeight","letterSpacing","textTransform","ml","rocket","rocket_name","launch_site","site_name","Star","some","id","e","lineHeight","isTruncated","Text","launch_date_utc","Intl","DateTimeFormat","weekday","year","month","day","format","Date","timeAgo","toFavorite","site_id","name","site_name_long","details","slice","type","category","FavoriteItem","favorite","removeFavorite","Trash2","cursor","LayoutDrawer","favBtnRef","isOpen","onClose","children","minH","Drawer","autoFocus","onOverlayClick","placement","finalFocusRef","borderBottomWidth","useLocalStorage","initialValue","useState","window","localStorage","getItem","JSON","parse","error","console","warn","storedValue","setStoredValue","useEffect","setItem","stringify","LaunchesLayout","useDisclosure","onOpen","useRef","order","sort","isValidating","setSize","setFavorites","preventDefault","stopPropagation","isFavorite","find","copy","filter","push","favCopy","ref","colorScheme","SimpleGrid","m","minChildWidth","flat","TooltipWrap","forwardRef","props","Tooltip","Launch","launchId","useParams","Header","TimeAndLocation","RocketInfo","Video","Gallery","images","minHeight","bgImage","bgPos","bgSize","bgRepeat","Heading","display","backgroundColor","py","borderRadius","Stack","isInline","columns","Stat","Watch","launch_date_local","hour","minute","second","timeZoneName","match","siteDateWithoutTimeZone","siteOffsetString","navigator","language","formatDateTimeLaunch","MapPin","RouterLink","cores","first_stage","Navigation","rocket_type","Layers","core","core_serial","join","every","land_success","second_stage","block","payloads","payload","payload_type","AspectRatioBox","maxH","ratio","title","youtube_id","allowFullScreen","image","href","Home","PageLink","url","rest","BrowserLink","ArrowRight","LaunchPadItem","launchPad","attempted_launches","successful_launches","vehicles_launched","LaunchPads","LaunchPad","launchPadId","launches","LocationAndVehicles","Map","location","RecentLaunches","randomColor","start","end","Math","random","background","mx","log","stats","region","latitude","longitude","App","ThemeProvider","theme","useTheme","ColorModeProvider","NavBar","element","toggleColorMode","align","justify","wrap","padding","fontFamily","Moon","Sun","_hover","ReactDOM","render","StrictMode","CSSReset","document","getElementById"],"mappings":"sUAEMA,EAAO,uCAAG,wCAAAC,EAAA,sEACSC,MAAK,WAAL,KADT,WACRC,EADQ,QAEAC,GAFA,sBAGNC,MAAMF,EAASG,YAHT,uBAKDH,EAASI,OALR,mFAAH,qDAQb,SAASC,EAAaC,EAAMC,GAC1B,IAAMC,EAAe,IAAIC,gBACzB,IAAK,IAAMC,KAAYH,EACrBC,EAAaG,OAAOD,EAAUH,EAAQG,IAIxC,MAAM,GAAN,OADsBE,iCACtB,OAA0BN,EAA1B,YAAkCE,EAAaK,YAG1C,SAASC,EAAUR,EAAMC,GAC9B,IAAMQ,EAAcV,EAAaC,EAAMC,GACvC,OAAOS,YAAOV,EAAOS,EAAc,KAAMlB,GAGpC,SAASoB,EAAmBX,EAAMC,GACvC,OAAOW,aAAe,SAACC,EAAWC,GAChC,OAAIA,IAAqBA,EAAiBC,OACjC,KAEFhB,EAAaC,EAAD,YAAC,eACfC,GADc,IAEjBe,OAAQf,EAAQgB,MAAQJ,OAEzBtB,G,aCzBU,SAASK,IACtB,OACE,kBAACsB,EAAA,EAAD,CAAMC,WAAW,SAASC,eAAe,SAASC,MAAM,QACtD,kBAACC,EAAA,EAAD,CACEC,OAAO,QACPC,QAAQ,cACRC,cAAc,SACdL,eAAe,SACfM,UAAU,SACVC,EAAE,KAEF,kBAACL,EAAA,EAAD,CAAWM,KAAK,IAAIC,GAAI,IACxB,kBAACP,EAAA,EAAD,CAAYQ,GAAI,EAAGC,GAAI,EAAGC,SAAS,MAAnC,6BAGA,kBAACV,EAAA,EAAD,CAAkBW,SAAS,MAA3B,2F,sBCxBD,SAASC,IASd,MAAO,CACLC,QATc,CAACC,MAAOC,EAASC,KAAMC,GAS5BC,UAHO,CAACJ,MAAOK,EAAeH,KAAMI,GAGzBC,cAPA,CAACP,MAAOQ,EAAeN,KAAMO,GAOdC,cARf,CAACV,MAAOW,EAAeT,KAAMU,GAQCC,YANhC,CAACb,MAAOc,EAAaZ,KAAMa,GAMkBC,gBALzC,CAAChB,MAAOiB,EAAiBf,KAAMgB,GAK2BC,cAJ5D,CAACnB,MAAOoB,EAAelB,KAAMmB,IAS9C,IAAMlB,EAAS,WACTF,EAAU,QACVQ,EAAe,WACfD,EAAgB,WAChBI,EAAe,WACfD,EAAgB,WAChBI,EAAa,aACbD,EAAc,QACdI,EAAiB,WACjBD,EAAkB,WAClBI,EAAe,WACfD,EAAgB,UAGhBf,EAAgB,WAChBC,EAAe,WCnBb,SAASgB,EAAT,GAAiC,IAAVC,EAAS,EAATA,MAC7BC,EAAaC,cAAbD,UAEP,OACE,kBAACE,EAAA,EAAD,CACEnC,EAAE,IACFoC,QAAQ,IACRC,UAAW,kBAACC,EAAA,EAAD,CAAKrC,KAAK,MAAMsC,GAAIC,IAAeC,MAAM,cAEnDT,EAAMU,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAgBb,EAAM5C,SAAWwD,EAAQ,EAC/C,OACE,kBAACT,EAAA,EAAD,CAAgBU,cAAeA,EAAeC,IAAKH,EAAKI,OACtD,kBAACZ,EAAA,EAAD,CACEM,MAAOlC,IAAQM,UAAUoB,GACzBM,GAAKM,OAAuBG,EAAPC,IACrBC,GAAKL,OAA0BG,EAAVL,EAAKO,IAEzBP,EAAKI,Y,YC1BL,SAASI,EAAT,GAKX,IAAD,IAJDC,EAIC,EAJDA,SACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,SACAC,EACC,EADDA,cAEMC,EACkB,KAAlB,OAAJH,QAAI,IAAJA,GAAA,UAAAA,EAAO,UAAP,eAAWjE,SACViE,IAAQ,UAAAA,EAAKA,EAAKjE,OAAS,UAAnB,eAAuBA,QAASkE,EAE3C,OACE,kBAAC/D,EAAA,EAAD,CAAME,eAAe,SAASgE,GAAG,SAC/B,kBAACC,EAAA,EAAD,CAAQC,QAASP,EAAUQ,SAAUJ,GAAiBD,GACnDA,EACC,kBAACM,EAAA,EAAD,MACEL,EACF,cAEA,iB,4CCbH,SAASM,GAAT,GAA4D,IAAD,ICRvCC,EDQEC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,eACtCjC,EAAcC,cAAdD,UAGR,OACE,kBAACK,EAAA,EAAD,CACEC,GAAIU,IACJC,GAAE,oBAAec,EAAOG,cAAcvF,YACtCwF,UAAU,KACVC,YAAY,MACZC,QAAQ,KACRC,SAAS,SACTC,SAAS,WACTC,GAAIlE,IAAQe,YAAYW,GACxByC,YAAanE,IAAQkB,gBAAgBQ,GACrCQ,MAAOlC,IAAQM,UAAUoB,IAEzB,kBAAC0C,EAAA,EAAD,CACEC,IAAG,oBACDZ,EAAOa,MAAMC,cAAc,UAD1B,aACD,EAA+BC,QAAQ,SAAU,iBADhD,QAEDf,EAAOa,MAAMG,oBAEfC,IAAG,UAAKjB,EAAOkB,aAAZ,WACHC,OAAQ,CAAC,QAAS,KAAM,SACxBzF,MAAM,OACN0F,UAAU,QACVC,eAAe,WAGjB,kBAACV,EAAA,EAAD,CACEH,SAAS,WACTc,IAAI,IACJC,MAAM,IACNX,IAAKZ,EAAOa,MAAMG,oBAClBG,OAAO,OACPC,UAAU,UACVC,eAAe,WAGjB,kBAAC/C,EAAA,EAAD,CAAKtC,EAAE,KACL,kBAACsC,EAAA,EAAD,CAAKkD,EAAE,OAAOhG,WAAW,UACtBwE,EAAOyB,eACN,kBAACC,EAAA,EAAD,CAAOC,GAAG,IAAI9F,QAAQ,QAAQ+F,aAAa,SAA3C,cAIA,kBAACF,EAAA,EAAD,CAAOC,GAAG,IAAI9F,QAAQ,QAAQ+F,aAAa,OAA3C,UAIF,kBAACtD,EAAA,EAAD,CACEG,MAAM,WACNoD,WAAW,WACXC,cAAc,OACdzF,SAAS,KACT0F,cAAc,YACdC,GAAG,KAEFhC,EAAOiC,OAAOC,YARjB,WAQsClC,EAAOmC,YAAYC,WAEzD,kBAAC9D,EAAA,EAAD,CAAKC,GAAI8D,IAAML,GAAG,IAAIvD,OA1DX,OAAMwB,QAAN,IAAMA,OAAN,EAAMA,EAAWqC,MAAK,SAAA3D,GAAI,OAAIA,EAAK4D,KAAOvC,EAAOG,kBA0DhB,aAAc,WACrDR,QAAS,SAAC6C,GAAD,OAAOtC,EAAesC,EAAGxC,OAGzC,kBAAC1B,EAAA,EAAD,CACEnC,GAAG,IACH0F,WAAW,WACXtD,GAAG,KACHkE,WAAW,QACXC,aAAW,GAEV1C,EAAOkB,cAEV,kBAAC3F,EAAA,EAAD,KACE,kBAACoH,EAAA,EAAD,CAAMtG,SAAS,OClFE0D,EDkFeC,EAAO4C,gBCjFxC,IAAIC,KAAKC,eAAe,QAAS,CACtCC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YACJC,OAAO,IAAIC,KAAKrD,KD4EX,KACA,kBAAC4C,EAAA,EAAD,CAAMlE,MAAM,WAAWuD,GAAG,IAAI3F,SAAS,MACpCgH,aAAQrD,EAAO4C,qBEpFrB,SAASU,GAAW3E,GAAO,IAAD,IAC/B,MAAO,CACL4D,GAAE,UAAE5D,EAAK4E,eAAP,QAAkB5E,EAAKwB,cACzBqD,KAAI,UAAE7E,EAAK8E,sBAAP,QAAyB9E,EAAKuC,aAClCwC,QAAS/E,EAAK+E,QAAU/E,EAAK+E,QAAQC,MAAM,EAAG,IAAM,MAAQ,sBAC5DC,KAAMjF,EAAKwB,cAAgB,SAAW,aACtC0D,SAAUlF,EAAKwB,cAAgB,WAAa,e,iCCAjC,SAAS2D,GAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,eACtC/F,EAAcC,cAAdD,UAER,OACE,kBAACK,EAAA,EAAD,CACEC,GAAIU,IACJC,GAAE,WAAM6E,EAASF,SAAf,YAA2BE,EAASxB,GAAG3H,YACzC4G,EAAE,OACF1F,cAAc,SACdsE,UAAU,KACVC,YAAY,MACZC,QAAQ,KACRC,SAAS,SACTC,SAAS,WACTxE,EAAE,IACFG,GAAI,EACJuE,YAAanE,IAAQkB,gBAAgBQ,GACrCwC,GAAIlE,IAAQqB,cAAcK,IAE1B,kBAACK,EAAA,EAAD,CAAKkD,EAAE,OAAOhG,WAAW,YACvB,kBAACkG,EAAA,EAAD,CAAOC,GAAG,IAAI9F,QAAQ,QAAQ+F,aAAa,QACxCmC,EAASH,MAGZ,kBAACtF,EAAA,EAAD,CACEG,MAAM,WACNoD,WAAW,WACXC,cAAc,OACdzF,SAAS,KACT0F,cAAc,YACdC,GAAG,KAEF+B,EAASP,OAId,kBAAClF,EAAA,EAAD,CAAKkC,SAAS,WAAWc,IAAI,IAAIC,MAAM,IAClCJ,OAAQ,EAAGzF,MAAO,EAAG6C,GAAI0F,KAAQjC,GAAG,IAAIkC,OAAO,UAC/CvE,QAAS,SAAC6C,GAAD,OAAOwB,EAAexB,EAAGuB,MAGvC,kBAACzF,EAAA,EAAD,CAAKkD,EAAE,OAAOhG,WAAW,SAASW,GAAI,EAAGE,SAAU,GAAIoC,MAAM,YAAYsF,EAASL,UCrCjF,SAASS,GAAT,GAA0F,IAAnElE,EAAkE,EAAlEA,UAAWmE,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,QAASN,EAA2B,EAA3BA,eAAgBO,EAAW,EAAXA,SAC5EtG,EAAaC,cAAbD,UAEP,OACE,kBAACK,EAAA,EAAD,CAAKkG,KAAK,QAAQ/D,GAAIlE,IAAQC,QAAQyB,IACpC,kBAACwG,GAAA,EAAD,CACEC,WAAW,EACXC,eAAgBL,EAChBD,OAAQA,EACRO,UAAU,QACV3I,KAAK,KACLqI,QAASA,EACTO,cAAeT,GAEf,kBAACK,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,MACA,kBAAC,KAAD,CAAchG,MAAOlC,IAAQM,UAAUoB,GAAYlC,UAAU,SAAS+I,kBAAkB,OAAxF,qBACK7E,QADL,IACKA,OADL,EACKA,EAAW7E,OADhB,KAGA,kBAAC,KAAD,QACI,OAAC6E,QAAD,IAACA,OAAD,EAACA,EAAW7E,SAAU6E,EAAUvB,KAAI,SAACC,GAAD,OACpC,kBAACmF,GAAD,CAAcC,SAAUpF,EAAMqF,eAAgBA,EAAgBlF,IAAKH,EAAK4D,UAEzE,OAACtC,QAAD,IAACA,OAAD,EAACA,EAAW7E,SAAU,kBAACkD,EAAA,EAAD,CAAKkD,EAAE,OAAOhG,WAAW,SAASM,cAAc,SAAS2D,GAAI,GAClF,kBAACnB,EAAA,EAAD,CAAKC,GAAI8D,IAAMlB,OAAQ,GAAIzF,MAAO,GAAI+C,MAAM,eAC5C,kBAACH,EAAA,EAAD,CAAKC,GAAG,KAAKlC,SAAU,GAAIoD,GAAI,GAA/B,yBAMR,kBAACnB,EAAA,EAAD,KACGiG,ICXMQ,OA7Bf,SAAyBjG,EAAKkG,GAC5B,MAAsCC,oBAAS,WAC7C,GAAsB,qBAAXC,OACT,OAAOF,EAGT,IACE,IAAMrG,EAAOuG,OAAOC,aAAaC,QAAQtG,GACzC,OAAOH,EAAO0G,KAAKC,MAAM3G,GAAQqG,EACjC,MAAOO,GAEP,OADAC,QAAQC,KAAR,+CAAgD3G,EAAhD,WAAyDyG,GAClDP,MAVX,mBAAOU,EAAP,KAAoBC,EAApB,KAyBA,OAXAC,qBAAU,WACR,IACED,EAAeD,GACO,qBAAXR,QACTA,OAAOC,aAAaU,QAAQ/G,EAAKuG,KAAKS,UAAUJ,IAElD,MAAOH,GACPC,QAAQC,KAAR,+CAAgD3G,EAAhD,WAAyDyG,MAE1D,CAACzG,EAAK4G,IAEF,CAACA,EAAaC,ICTR,SAASI,KACtB,MAAkCC,cAA3B3B,EAAP,EAAOA,OAAQ4B,EAAf,EAAeA,OAAQ3B,EAAvB,EAAuBA,QAEjBF,EAAY8B,mBAElB,EAAmDlL,EACjD,iBACA,CACEM,MAVY,GAWZ6K,MAAO,OACPC,KAAM,oBALH/G,EAAP,EAAOA,KAAMkG,EAAb,EAAaA,MAAOc,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASrK,EAA3C,EAA2CA,KAS3C,EAAkC8I,GAAgB,WAAY,IAA9D,mBAAO9E,EAAP,KAAkBsG,EAAlB,KACMrG,EAAiB,SAACsC,EAAGxC,GACzBwC,EAAEgE,iBACFhE,EAAEiE,kBAEF,IAAMC,KAAc,OAACzG,QAAD,IAACA,OAAD,EAACA,EAAW0G,MAAK,SAAAhI,GAAI,OAAIA,EAAK4D,KAAOvC,EAAOG,kBAC5DyG,EAAI,YAAO3G,GACXyG,EACFE,EAAOA,EAAKC,QAAO,SAAAlI,GAAI,OAAIA,EAAK4D,KAAOvC,EAAOG,iBAE9CyG,EAAKE,KAAKxD,GAAWtD,IAGvBuG,EAAaK,IAYf,OACE,kBAACzC,GAAD,CAAclE,UAAWA,EAAW+D,eAVf,SAACxB,EAAGuB,GACzBvB,EAAEgE,iBACFhE,EAAEiE,kBAEF,IAAIM,GAAmB,OAAT9G,QAAS,IAATA,OAAA,EAAAA,EAAW7E,QAAX,YAAwB6E,GAAa,GACnD8G,EAAUA,EAAQF,QAAO,SAAAlI,GAAI,OAAIA,EAAK4D,KAAOwB,EAASxB,MACtDgE,EAAaQ,IAIuD1C,OAAQA,EAC9DC,QAASA,EAASF,UAAWA,GACzC,kBAAC9F,EAAA,EAAD,CAAKkD,EAAE,OAAOhG,WAAW,WAAWC,eAAe,iBACjD,kBAACsC,EAAD,CACEC,MAAO,CAAC,CAACe,MAAO,OAAQG,GAAI,KAAM,CAACH,MAAO,eAE5C,kBAACW,EAAA,EAAD,CAAQsH,IAAK5C,EAAW6C,YAAY,OAAO/K,GAAG,IAAIyD,QAASsG,GAA3D,cACchG,EAAU7E,OADxB,MAIF,kBAAC8L,EAAA,EAAD,CAAYC,EAAG,CAAC,EAAG,KAAM,GAAIC,cAAc,QAAQhJ,QAAQ,KACxDmH,GAAS,kBAAC,EAAD,MACTlG,GACDA,EACGgI,OACA3I,KAAI,SAACsB,GAAD,OACH,kBAACF,GAAD,CAAYE,OAAQA,EAAQE,eAAgBA,EAAgBD,UAAWA,EAC3DnB,IAAKkB,EAAOG,oBAG9B,kBAAChB,EAAD,CACEC,SAAU,kBAAMkH,EAAQrK,EAAO,IAC/BoD,KAAMA,EACNC,SAjEU,GAkEVC,cAAe8G,K,uGChFViB,GAAcC,sBAAW,SAACC,EAAOR,GAC5C,OACE,kBAACS,GAAA,EAAD,iBAAaD,EAAb,CAAoBR,IAAKA,QC2Bd,SAASU,KACtB,IAAOzJ,EAAaC,cAAbD,UACF0J,EAAYC,cAAZD,SACL,EAA8B9M,EAAU,aAAD,OAAc8M,IAAxC3H,EAAb,EAAOX,KAEP,OAFA,EAAqBkG,MAEH,kBAAC,EAAD,MACbvF,EASH,kBAAC1B,EAAA,EAAD,CAAKG,MAAOlC,IAAQM,UAAUoB,GAAYwC,GAAIlE,IAAQC,QAAQyB,IAC5D,kBAACF,EAAD,CACEC,MAAO,CACL,CAACe,MAAO,OAAQG,GAAI,KACpB,CAACH,MAAO,WAAYG,GAAI,MACxB,CAACH,MAAM,IAAD,OAAMiB,EAAOG,mBAGvB,kBAAC0H,GAAD,CAAQ7H,OAAQA,IAChB,kBAAC1B,EAAA,EAAD,CAAK6I,EAAG,CAAC,EAAG,IACV,kBAACW,GAAD,CAAiB9H,OAAQA,IACzB,kBAAC+H,GAAD,CAAY/H,OAAQA,IACpB,kBAAC2C,EAAA,EAAD,CAAMlE,MAAOlC,IAAQM,UAAUoB,GAAY5B,SAAU,CAAC,KAAM,KAAM,MAAOoD,GAAG,KACzEO,EAAO0D,SAEV,kBAACsE,GAAD,CAAOhI,OAAQA,IACf,kBAACiI,GAAD,CAASC,OAAQlI,EAAOa,MAAMC,kBAvBhC,kBAACvF,EAAA,EAAD,CAAME,eAAe,SAASD,WAAW,SAAS2M,UAAU,QAC1D,kBAACtI,EAAA,EAAD,CAAS5D,KAAK,QA4BtB,SAAS4L,GAAT,GAA2B,IAAV7H,EAAS,EAATA,OACf,EAAkC+E,GAAgB,YAAlD,mBAAO9E,EAAP,KAAkBsG,EAAlB,KAEMG,EAAa,yBAAMzG,QAAN,IAAMA,OAAN,EAAMA,EAAWqC,MAAK,SAAA3D,GAAI,OAAIA,EAAK4D,KAAOvC,EAAOG,kBAapE,OACE,kBAAC5E,EAAA,EAAD,CACE6M,QAAO,cAASpI,EAAOa,MAAMC,cAAc,GAApC,KACPuH,MAAM,SACNC,OAAO,QACPC,SAAS,YACTJ,UAAU,OACV3H,SAAS,WACTxE,EAAG,CAAC,EAAG,GACPR,WAAW,WACXC,eAAe,iBAEf,kBAACkF,EAAA,EAAD,CACEH,SAAS,WACTc,IAAI,IACJC,MAAM,IACNX,IAAKZ,EAAOa,MAAMG,oBAClBG,OAAQ,CAAC,OAAQ,SACjBC,UAAU,UACVC,eAAe,WAEjB,kBAACmH,GAAA,EAAD,CACE/J,MAAM,QACNgK,QAAQ,SACRC,gBAAgB,YAChBrM,SAAU,CAAC,KAAM,OACjBsF,GAAG,IACHgH,GAAG,IACHC,aAAa,MAEZ5I,EAAOkB,aACR,kBAAC5C,EAAA,EAAD,CAAKC,GAAI8D,IAAML,GAAG,IAAIb,OAAQ,EAAGzF,MAAO,EAAGwI,OAAO,UAAUuE,QAAQ,cAC/DhK,MAAOiI,IAAe,aAAe,YAAa/G,QAAS,kBA3C/C,SAACK,GACtB,IAAI4G,EAAI,YAAO3G,GACXyG,IACFE,EAAOA,EAAKC,QAAO,SAAAlI,GAAI,OAAIA,EAAK4D,KAAOvC,EAAOG,iBAE9CyG,EAAKE,KAAKxD,GAAWtD,IAGvBuG,EAAaK,GAmC6D1G,CAAeF,OAEvF,kBAAC6I,GAAA,EAAD,CAAOC,UAAQ,EAAC1K,QAAQ,KACtB,kBAACsD,EAAA,EAAD,CAAOE,aAAa,SAASvF,SAAU,CAAC,KAAM,OAA9C,IACI2D,EAAOG,eAEVH,EAAOyB,eACN,kBAACC,EAAA,EAAD,CAAOE,aAAa,QAAQvF,SAAU,CAAC,KAAM,OAA7C,cAIA,kBAACqF,EAAA,EAAD,CAAOE,aAAa,MAAMvF,SAAU,CAAC,KAAM,OAA3C,YASV,SAASyL,GAAT,GAAoC,IPhIL/H,EOgILC,EAAS,EAATA,OACxB,OACE,kBAACkH,EAAA,EAAD,CAAY6B,QAAS,CAAC,EAAG,EAAG,GAAI1I,YAAY,MAAMrE,EAAE,IAAI4M,aAAa,MACnE,kBAACI,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,CAAWP,QAAQ,QACjB,kBAACnK,EAAA,EAAD,CAAKC,GAAI0K,KAAOvN,MAAM,QAAQ,IAC9B,kBAAC4C,EAAA,EAAD,CAAK0D,GAAG,IAAIzD,GAAG,QAAf,gBAIF,kBAACyK,GAAA,EAAD,CAAY3M,SAAU,CAAC,KAAM,OAC3B,kBAACiL,GAAD,CAAa1C,UAAU,MAAM7F,OP3IRgB,EO2I8BC,EAAOkJ,kBP1I3D,IAAIrG,KAAKC,eAAe,QAAS,CACtCE,KAAM,UACNC,MAAO,OACPC,IAAK,UACLiG,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,aAAc,UACbnG,OAAO,IAAIC,KAAKrD,MAGd,SAA8BA,GAEnC,MAAuDA,EAAUwJ,MAC/D,0BADF,mBAAUC,GAAV,WAAmCC,EAAnC,KAIA,OAAO,IAAI5G,KAAKC,eAAe4G,UAAUC,SAAU,CAC/C3G,KAAM,UACNC,MAAO,OACPC,IAAK,UACLiG,KAAM,UACNC,OAAQ,UACRC,OAAQ,YACPlG,OAAO,IAAIC,KAAKoG,IAPd,cAOiDC,GOmH7CG,CAAqB5J,EAAOkJ,qBAGjC,kBAACF,GAAA,EAAD,KAAe3F,aAAQrD,EAAO4C,mBAEhC,kBAACoG,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,CAAWP,QAAQ,QACjB,kBAACnK,EAAA,EAAD,CAAKC,GAAIsL,KAAQnO,MAAM,QAAQ,IAC/B,kBAAC4C,EAAA,EAAD,CAAK0D,GAAG,IAAIzD,GAAG,QAAf,gBAIF,kBAACyK,GAAA,EAAD,CAAY3M,SAAU,CAAC,KAAM,OAC3B,kBAAC4C,GAAA,EAAD,CACEV,GAAIuL,IACJ5K,GAAE,uBAAkBc,EAAOmC,YAAYoB,UAEtCvD,EAAOmC,YAAYsB,iBAGxB,kBAACuF,GAAA,EAAD,KAAehJ,EAAOmC,YAAYC,aAM1C,SAAS2F,GAAT,GAA+B,IAAV/H,EAAS,EAATA,OACb+J,EAAQ/J,EAAOiC,OAAO+H,YAAYD,MAExC,OACE,kBAAC7C,EAAA,EAAD,CACE6B,QAAS,CAAC,EAAG,EAAG,GAChB1I,YAAY,MACZlE,GAAG,IACHH,EAAE,IACF4M,aAAa,MAEb,kBAACI,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,CAAWP,QAAQ,QACjB,kBAACnK,EAAA,EAAD,CAAKC,GAAI0L,KAAYvO,MAAM,QAAQ,IACnC,kBAAC4C,EAAA,EAAD,CAAK0D,GAAG,IAAIzD,GAAG,QAAf,WAIF,kBAACyK,GAAA,EAAD,CAAY3M,SAAU,CAAC,KAAM,OAC1B2D,EAAOiC,OAAOC,aAEjB,kBAAC8G,GAAA,EAAD,KAAehJ,EAAOiC,OAAOiI,cAE/B,kBAAClB,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,CAAWP,QAAQ,QACjB,kBAACnK,EAAA,EAAD,CAAKC,GAAI4L,KAAQzO,MAAM,QAAQ,IAC/B,kBAAC4C,EAAA,EAAD,CAAK0D,GAAG,IAAIzD,GAAG,QAAf,gBAIF,kBAACyK,GAAA,EAAD,CAAY3M,SAAU,CAAC,KAAM,OAC1B0N,EAAMrL,KAAI,SAAC0L,GAAD,OAAUA,EAAKC,eAAaC,KAAK,OAE9C,kBAACtB,GAAA,EAAD,KACGe,EAAMQ,OAAM,SAACH,GAAD,OAAUA,EAAKI,gBACP,IAAjBT,EAAM3O,OACJ,YACA,gBACF,SAGR,kBAAC4N,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,CAAWP,QAAQ,QACjB,kBAACnK,EAAA,EAAD,CAAKC,GAAI4L,KAAQzO,MAAM,QAAQ,IAC/B,kBAAC4C,EAAA,EAAD,CAAK0D,GAAG,IAAIzD,GAAG,QAAf,iBAIF,kBAACyK,GAAA,EAAD,CAAY3M,SAAU,CAAC,KAAM,OAA7B,SACS2D,EAAOiC,OAAOwI,aAAaC,OAEpC,kBAAC1B,GAAA,EAAD,gBACW,IACRhJ,EAAOiC,OAAOwI,aAAaE,SACzBjM,KAAI,SAACkM,GAAD,OAAaA,EAAQC,gBACzBP,KAAK,UAQpB,SAAStC,GAAT,GAA0B,IAAVhI,EAAS,EAATA,OACd,OACE,kBAAC8K,GAAA,EAAD,CAAgBC,KAAK,QAAQC,MAAO,KAClC,kBAAC1M,EAAA,EAAD,CACEC,GAAG,SACH0M,MAAOjL,EAAOkB,aACdN,IAAG,wCAAmCZ,EAAOa,MAAMqK,YACnDC,iBAAe,KAMvB,SAASlD,GAAT,GAA4B,IAAVC,EAAS,EAATA,OAChB,OACE,kBAAChB,EAAA,EAAD,CAAYzH,GAAG,IAAI2H,cAAc,QAAQhJ,QAAQ,KAC9C8J,EAAOxJ,KAAI,SAAC0M,GAAD,OACV,uBAAGC,KAAMD,EAAOtM,IAAKsM,GACnB,kBAACzK,EAAA,EAAD,CAAOC,IAAKwK,EAAMrK,QAAQ,SAAU,iB,6CC3P/B,SAASuK,KACtB,IAAOrN,EAAaC,cAAbD,UAEP,OACE,kBAACK,EAAA,EAAD,CAAK6J,UAAU,QAAQnM,EAAG,EAAGyE,GAAIlE,IAAQC,QAAQyB,IAC/C,kBAAC4K,GAAA,EAAD,CAAO1B,EAAE,IAAI/I,QAAQ,KACnB,kBAACmN,GAAD,CAAUC,IAAI,YAAY9K,YAAanE,IAAQkB,gBAAgBQ,GACrDwC,GAAIlE,IAAQqB,cAAcK,IADpC,0BAEA,kBAACsN,GAAD,CAAUC,IAAI,eAAe9K,YAAanE,IAAQkB,gBAAgBQ,GACxDwC,GAAIlE,IAAQqB,cAAcK,IADpC,+BAOR,SAASsN,GAAT,GAA6C,IAA1BC,EAAyB,EAAzBA,IAAKjH,EAAoB,EAApBA,SAAakH,EAAO,mBAC1C,OACE,kBAACxM,GAAA,EAAD,eAAMV,GAAImN,IACJxM,GAAIsM,GAASC,GACjB,kBAAClQ,EAAA,EAAD,CACEE,eAAe,gBACfO,EAAE,IACFoE,UAAU,KACVC,YAAY,MACZC,QAAQ,MAER,kBAACqC,EAAA,EAAD,CAAMtG,SAAS,MAAMkI,GACrB,kBAACjG,EAAA,EAAD,CAAKC,GAAIoN,SC3BV,SAASC,GAAT,GAAgE,IAAxCC,EAAuC,EAAvCA,UAAW5L,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,eAC5CjC,EAAaC,cAAbD,UAGP,OACE,kBAACK,EAAA,EAAD,CACEC,GAAIU,IACJC,GAAE,uBAAkB2M,EAAUtI,SAC9BnD,UAAU,KACVC,YAAY,MACZC,QAAQ,KACRC,SAAS,SACTC,SAAS,WACTE,YAAanE,IAAQkB,gBAAgBQ,GACrCwC,GAAIlE,IAAQqB,cAAcK,IAE1B,kBAACK,EAAA,EAAD,CAAKtC,EAAE,KACL,kBAACsC,EAAA,EAAD,CAAKkD,EAAE,OAAOhG,WAAW,UACD,WAArBqQ,EAAUjQ,OACT,kBAAC8F,EAAA,EAAD,CAAOC,GAAG,IAAI9F,QAAQ,QAAQ+F,aAAa,SAA3C,UAIA,kBAACF,EAAA,EAAD,CAAOC,GAAG,IAAI9F,QAAQ,QAAQ+F,aAAa,OAA3C,WAIF,kBAACtD,EAAA,EAAD,CACEG,MAAM,WACNoD,WAAW,WACXC,cAAc,OACdzF,SAAS,KACT0F,cAAc,YACdC,GAAG,KAEF6J,EAAUC,mBARb,oBAQkD,IAC/CD,EAAUE,oBATb,cAWA,kBAACzN,EAAA,EAAD,CAAKC,GAAI8D,IAAML,GAAG,IAAIvD,OApCJ,OAACwB,QAAD,IAACA,OAAD,EAACA,EAAW0G,MAAK,SAAAhI,GAAI,OAAIA,EAAK4D,KAAOsJ,EAAUtI,YAoCrB,aAAe,WACtD5D,QAAS,SAAC6C,GAAD,OAAOtC,EAAesC,EAAGqJ,OAGzC,kBAACvN,EAAA,EAAD,CACEnC,GAAG,IACH0F,WAAW,WACXtD,GAAG,KACHkE,WAAW,QACXC,aAAW,GAEVmJ,EAAUrI,MAEb,kBAACb,EAAA,EAAD,CAAMlE,MAAM,WAAWpC,SAAS,MAC7BwP,EAAUG,kBAAkB1B,KAAK,SCxC7B,SAAS2B,KACtB,MAAkCjG,cAA3B3B,EAAP,EAAOA,OAAQ4B,EAAf,EAAeA,OAAQ3B,EAAvB,EAAuBA,QACjBF,EAAY8B,mBAElB,EAAmDlL,EACjD,cACA,CACEM,MATY,KAMT+D,EAAP,EAAOA,KAAMkG,EAAb,EAAaA,MAAOc,EAApB,EAAoBA,aAAcpK,EAAlC,EAAkCA,KAAMqK,EAAxC,EAAwCA,QAOxC,EAAkCvB,GAAgB,cAAe,IAAjE,mBAAO9E,EAAP,KAAkBsG,EAAlB,KACMrG,EAAiB,SAACsC,EAAGqJ,GACzBrJ,EAAEgE,iBACFhE,EAAEiE,kBAEF,IAAMC,KAAc,OAACzG,QAAD,IAACA,OAAD,EAACA,EAAW0G,MAAK,SAAAhI,GAAI,OAAIA,EAAK4D,KAAOsJ,EAAUtI,YAC/DqD,EAAI,YAAO3G,GACXyG,EACFE,EAAOA,EAAKC,QAAO,SAAAlI,GAAI,OAAIA,EAAK4D,KAAOsJ,EAAUtI,WAEjDqD,EAAKE,KAAKxD,GAAWuI,IAGvBtF,EAAaK,IAYf,OACE,kBAACzC,GAAD,CAAclE,UAAWA,EAAW+D,eAVf,SAACxB,EAAGuB,GACzBvB,EAAEgE,iBACFhE,EAAEiE,kBAEF,IAAIM,GAAmB,OAAT9G,QAAS,IAATA,OAAA,EAAAA,EAAW7E,QAAX,YAAwB6E,GAAa,GACnD8G,EAAUA,EAAQF,QAAO,SAAAlI,GAAI,OAAIA,EAAK4D,KAAOwB,EAASxB,MACtDgE,EAAaQ,IAIuD1C,OAAQA,EAC9DC,QAASA,EAASF,UAAWA,GACzC,kBAAC9F,EAAA,EAAD,CAAKkD,EAAE,OAAOhG,WAAW,WAAWC,eAAe,iBACjD,kBAACsC,EAAD,CACEC,MAAO,CAAC,CAACe,MAAO,OAAQG,GAAI,KAAM,CAACH,MAAO,kBAE5C,kBAACW,EAAA,EAAD,CAAQsH,IAAK5C,EAAW6C,YAAY,OAAO/K,GAAG,IAAIyD,QAASsG,GAA3D,cACchG,EAAU7E,OADxB,MAIF,kBAAC8L,EAAA,EAAD,CAAYC,EAAG,CAAC,EAAG,KAAM,GAAIC,cAAc,QAAQhJ,QAAQ,KACxDmH,GAAS,kBAAC,EAAD,MACTlG,GAAQA,EAAKgI,OAAO3I,KAAI,SAACmN,GAAD,OACvB,kBAACD,GAAD,CAAe9M,IAAK+M,EAAUtI,QAASsI,UAAWA,EAAW5L,UAAWA,EACzDC,eAAgBA,QAGnC,kBAACf,EAAD,CACEC,SAAU,kBAAMkH,EAAQrK,EAAO,IAC/BoD,KAAMA,EACNC,SA3DU,GA4DVC,cAAe8G,KCjDR,SAAS6F,KACtB,IAAOjO,EAAaC,cAAbD,UACFkO,EAAevE,cAAfuE,YACL,EAAiCtR,EAAU,eAAD,OAAgBsR,IAA7CN,EAAb,EAAOxM,KAAiBkG,EAAxB,EAAwBA,MAEX6G,EAAYvR,EAAUgR,EAAY,iBAAmB,KAAM,CACtEvQ,MAAO,EACP6K,MAAO,OACPC,KAAM,kBACN7C,QAAO,OAAEsI,QAAF,IAAEA,OAAF,EAAEA,EAAWtI,UAJflE,KAOP,OAAIkG,EAAc,kBAAC,EAAD,MACbsG,EASH,kBAACvN,EAAA,EAAD,CAAMmC,GAAIlE,IAAQC,QAAQyB,GAAYQ,MAAOlC,IAAQM,UAAUoB,IAC7D,kBAACF,EAAD,CACEC,MAAO,CACL,CAACe,MAAO,OAAQG,GAAI,KACpB,CAACH,MAAO,cAAeG,GAAI,MAC3B,CAACH,MAAO8M,EAAUrI,SAGtB,kBAAC,GAAD,CAAQqI,UAAWA,IACnB,kBAACvN,EAAA,EAAD,CAAK6I,EAAG,CAAC,EAAG,IACV,kBAACkF,GAAD,CAAqBR,UAAWA,IAChC,kBAAClJ,EAAA,EAAD,CAAMlE,MAAOlC,IAAQM,UAAUoB,GAAY5B,SAAU,CAAC,KAAM,KAAM,MAAOoD,GAAG,KACzEoM,EAAUnI,SAEb,kBAAC4I,GAAD,CAAKC,SAAUV,EAAUU,WACzB,kBAACC,GAAD,CAAgBJ,SAAUA,MAtB5B,kBAAC7Q,EAAA,EAAD,CAAME,eAAe,SAASD,WAAW,SAAS2M,UAAU,QAC1D,kBAACtI,EAAA,EAAD,CAAS5D,KAAK,QA2BtB,IAAMwQ,GAAc,eAACC,EAAD,uDAAS,IAAKC,EAAd,uDAAoB,IAApB,oBACXD,EAAQC,EAAMC,KAAKC,SADR,gBAGpB,SAAShF,GAAT,GAA8B,IAAbgE,EAAY,EAAZA,UACf,EAAkC9G,GAAgB,eAAlD,mBAAO9E,EAAP,KAAkBsG,EAAlB,KAEMG,EAAa,yBAAMzG,QAAN,IAAMA,OAAN,EAAMA,EAAWqC,MAAK,SAAA3D,GAAI,OAAIA,EAAK4D,KAAOsJ,EAAUtI,YAiBvE,OACE,kBAAChI,EAAA,EAAD,CACEuR,WAAU,0BAAqBL,KAArB,aAAuCA,KAAvC,KACVpE,MAAM,SACNC,OAAO,QACPC,SAAS,YACTJ,UAAU,OACV3H,SAAS,WACT1E,cAAe,CAAC,SAAU,OAC1BE,EAAG,CAAC,EAAG,GACPR,WAAW,WACXC,eAAe,iBAEf,kBAAC+M,GAAA,EAAD,CACE/J,MAAM,WACNgK,QAAQ,SACRsE,GAAI,CAAC,EAAG,GACRtN,GAAG,IACHpD,SAAU,CAAC,KAAM,OACjBuM,aAAa,MAEZiD,EAAUpI,eACX,kBAACnF,EAAA,EAAD,CAAKC,GAAI8D,IAAML,GAAG,IAAIb,OAAQ,EAAGzF,MAAO,EAAGwI,OAAO,UAAUuE,QAAQ,cAC/DhK,MAAOiI,IAAe,aAAe,YAAa/G,QAtCtC,SAAC6C,GACtBA,EAAEgE,iBACFhE,EAAEiE,kBAEFjB,QAAQwH,IAAInB,GACZ,IAAIjF,EAAI,YAAO3G,GACXyG,IACFE,EAAOA,EAAKC,QAAO,SAAAlI,GAAI,OAAIA,EAAK4D,KAAOsJ,EAAUtI,WAEjDqD,EAAKE,KAAKxD,GAAWuI,IAGvBtF,EAAaK,OA4BX,kBAACiC,GAAA,EAAD,CAAOC,UAAQ,EAAC1K,QAAQ,KACtB,kBAACsD,EAAA,EAAD,CAAOE,aAAa,SAASvF,SAAU,CAAC,KAAM,OAC3CwP,EAAUE,oBADb,IACmCF,EAAUC,mBAAoB,IADjE,cAIqB,WAApBD,EAAUoB,MACT,kBAACvL,EAAA,EAAD,CAAOE,aAAa,QAAQvF,SAAU,CAAC,KAAM,OAA7C,UAIA,kBAACqF,EAAA,EAAD,CAAOE,aAAa,MAAMvF,SAAU,CAAC,KAAM,OAA3C,aASV,SAASgQ,GAAT,GAA2C,IAAbR,EAAY,EAAZA,UAC5B,OACE,kBAAC3E,EAAA,EAAD,CAAY6B,QAAS,CAAC,EAAG,EAAG,GAAI1I,YAAY,MAAMrE,EAAE,IAAI4M,aAAa,MACnE,kBAACI,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,CAAWP,QAAQ,QACjB,kBAACnK,EAAA,EAAD,CAAKC,GAAIsL,KAAQnO,MAAM,QAAQ,IAC/B,kBAAC4C,EAAA,EAAD,CAAK0D,GAAG,IAAIzD,GAAG,QAAf,aAIF,kBAACyK,GAAA,EAAD,CAAY3M,SAAS,MAAMwP,EAAUU,SAAS/I,MAC9C,kBAACwF,GAAA,EAAD,KAAe6C,EAAUU,SAASW,SAEpC,kBAAClE,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,CAAWP,QAAQ,QACjB,kBAACnK,EAAA,EAAD,CAAKC,GAAI0L,KAAYvO,MAAM,QAAQ,IACnC,kBAAC4C,EAAA,EAAD,CAAK0D,GAAG,IAAIzD,GAAG,QAAf,aAIF,kBAACyK,GAAA,EAAD,CAAY3M,SAAS,MAClBwP,EAAUG,kBAAkB1B,KAAK,SAO5C,SAASgC,GAAT,GAA0B,IAAZC,EAAW,EAAXA,SACZ,OACE,kBAACzB,GAAA,EAAD,CAAgBE,MAAO,KACrB,kBAAC1M,EAAA,EAAD,CACEC,GAAG,SACHqC,IAAG,yCAAoC2L,EAASY,SAA7C,aAA0DZ,EAASa,UAAnE,sBACHnM,IAAI,UAMZ,SAASuL,GAAT,GAAqC,IAAZJ,EAAW,EAAXA,SACvB,EAAkCrH,GAAgB,YAAlD,mBAAO9E,EAAP,KAAkBsG,EAAlB,KACMrG,EAAiB,SAACsC,EAAGxC,GACzBwC,EAAEgE,iBACFhE,EAAEiE,kBAEF,IAAMC,KAAc,OAACzG,QAAD,IAACA,OAAD,EAACA,EAAW0G,MAAK,SAAAhI,GAAI,OAAIA,EAAK4D,KAAOvC,EAAOuC,OAC5DqE,EAAI,YAAO3G,GACXyG,EACFE,EAAOA,EAAKC,QAAO,SAAAlI,GAAI,OAAIA,EAAK4D,KAAOvC,EAAOuC,MAE9CqE,EAAKE,KAAKxD,GAAWtD,IAGvBuG,EAAaK,IAGf,OAAI,OAACwF,QAAD,IAACA,OAAD,EAACA,EAAUhR,QAIb,kBAACyN,GAAA,EAAD,CAAOF,GAAG,IAAIvK,QAAQ,KACpB,kBAACuE,EAAA,EAAD,CAAMtG,SAAS,KAAKwF,WAAW,QAA/B,iBAGA,kBAACqF,EAAA,EAAD,CAAYE,cAAc,QAAQhJ,QAAQ,KACvCgO,EAAS1N,KAAI,SAACsB,GAAD,OACZ,kBAACF,GAAD,CAAYG,UAAWA,EAAWD,OAAQA,EAAQlB,IAAKkB,EAAOG,cAAeD,eAAgBA,SAT5F,K,iCCtLI,SAASmN,KACtB,OACE,kBAACC,EAAA,EAAD,CAAeC,MAAOC,gBACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,GAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrT,KAAK,IAAIsT,QAAS,kBAACrC,GAAD,QACzB,kBAAC,IAAD,CAAOjR,KAAK,YAAYsT,QAAS,kBAAC,GAAD,QACjC,kBAAC,IAAD,CAAOtT,KAAK,sBAAsBsT,QAAS,kBAACjG,GAAD,QAC3C,kBAAC,IAAD,CAAOrN,KAAK,eAAesT,QAAS,kBAAC1B,GAAD,QACpC,kBAAC,IAAD,CAAO5R,KAAK,4BAA4BsT,QAAS,kBAACzB,GAAD,WAO7D,SAASwB,KACP,MAAuCxP,cAA/BD,EAAR,EAAQA,UAAW2P,EAAnB,EAAmBA,gBAEnB,OACE,kBAACrS,EAAA,EAAD,CACEgD,GAAG,MACHsP,MAAM,SACNC,QAAQ,gBACRC,KAAK,OACLC,QAAQ,IACRvN,GAAIlE,IAAQS,cAAciB,GAC1BQ,MAAM,SAEN,kBAACkE,EAAA,EAAD,CACEsL,WAAW,OACXnM,cAAc,MACdD,WAAW,OACXxF,SAAS,MAJX,yBASA,kBAACqD,EAAA,EAAD,CAAQnB,GAAkB,UAAdN,EAAwBiQ,KAAOC,KAAKxO,QAASiO,EACjDnN,GAAIlE,IAAQY,cAAcc,GAAYmQ,OAAQ7R,IAAQY,cAAcc,GAAYkD,OAAQ,GAAIzF,MAAO,GAAIwI,OAAO,UAAUlI,EAAG,KC9CzIqS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAACjB,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,MACA,kBAACnB,GAAD,SAINoB,SAASC,eAAe,U","file":"static/js/main.00978a96.chunk.js","sourcesContent":["import useSWR, { useSWRInfinite } from \"swr\";\n\nconst fetcher = async (...args) => {\n  const response = await fetch(...args);\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return await response.json();\n};\n\nfunction getSpaceXUrl(path, options) {\n  const searchParams = new URLSearchParams();\n  for (const property in options) {\n    searchParams.append(property, options[property]);\n  }\n\n  const spaceXApiBase = process.env.REACT_APP_SPACEX_API_URL;\n  return `${spaceXApiBase}${path}?${searchParams.toString()}`;\n}\n\nexport function useSpaceX(path, options) {\n  const endpointUrl = getSpaceXUrl(path, options);\n  return useSWR(path ? endpointUrl : null, fetcher);\n}\n\nexport function useSpaceXPaginated(path, options) {\n  return useSWRInfinite((pageIndex, previousPageData) => {\n    if (previousPageData && !previousPageData.length) {\n      return null;\n    }\n    return getSpaceXUrl(path, {\n      ...options,\n      offset: options.limit * pageIndex,\n    });\n  }, fetcher);\n}\n","import React from \"react\";\nimport {\n  Flex,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/core\";\n\nexport default function Error() {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\">\n      <Alert\n        status=\"error\"\n        variant=\"left-accent\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        p=\"8\"\n      >\n        <AlertIcon size=\"6\" mr={0} />\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n          Problems loading the data\n        </AlertTitle>\n        <AlertDescription maxWidth=\"md\">\n          If the problem persists, try to refresh the page or wait a few minutes\n          and try again.\n        </AlertDescription>\n      </Alert>\n    </Flex>\n  );\n}\n","export function Theme() {\n  const bgColor = {light: lightBg, dark: darkBg};\n  const bgColorButton = {light: buttonLightBg, dark: buttonDarkBg};\n  const bgColorNavbar = {light: navbarLightBg, dark: navbarDarkBg};\n  const bgColorCard = {light: cardLightBg, dark: cardDarkBg};\n  const borderColorCard = {light: cardLightBorder, dark: cardDarkBorder};\n  const tileColorCard = {light: cardLightTile, dark: cardDarkTile};\n  const textColor = {light: lightModeText, dark: darkModeText};\n\n  return {\n    bgColor, textColor, bgColorNavbar, bgColorButton, bgColorCard, borderColorCard, tileColorCard\n  }\n}\n\n//background color\nexport const darkBg = \"gray.600\";\nexport const lightBg = \"white\";\nexport const navbarDarkBg = \"gray.800\";\nexport const navbarLightBg = \"gray.700\";\nexport const buttonDarkBg = \"gray.700\";\nexport const buttonLightBg = \"gray.500\";\nexport const cardDarkBg = \"purple.900\";\nexport const cardLightBg = \"white\";\nexport const cardDarkBorder = \"gray.600\";\nexport const cardLightBorder = \"gray.200\";\nexport const cardDarkTile = \"gray.300\";\nexport const cardLightTile = \"gray.50\";\n\n//text color\nexport const lightModeText = \"gray.900\"\nexport const darkModeText = \"gray.100\"\n","import React from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Box, useColorMode,\n} from \"@chakra-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { ChevronsRight } from \"react-feather\";\nimport {Theme} from \"../../services/styling\";\n\nexport default function Breadcrumbs({ items }) {\n  const {colorMode} = useColorMode();\n\n  return (\n    <Breadcrumb\n      p=\"6\"\n      spacing=\"1\"\n      separator={<Box size=\"1em\" as={ChevronsRight} color=\"gray.300\" />}\n    >\n      {items.map((item, index) => {\n        const isCurrentPage = items.length === index + 1;\n        return (\n          <BreadcrumbItem isCurrentPage={isCurrentPage} key={item.label}>\n            <BreadcrumbLink\n              color={Theme().textColor[colorMode]}\n              as={!isCurrentPage ? Link : undefined}\n              to={!isCurrentPage ? item.to : undefined}\n            >\n              {item.label}\n            </BreadcrumbLink>\n          </BreadcrumbItem>\n        );\n      })}\n    </Breadcrumb>\n  );\n}\n","import React from \"react\";\nimport { Spinner, Flex, Button } from \"@chakra-ui/core\";\n\nexport default function LoadMoreButton({\n  loadMore,\n  data,\n  pageSize,\n  isLoadingMore,\n}) {\n  const isReachingEnd =\n    data?.[0]?.length === 0 ||\n    (data && data[data.length - 1]?.length < pageSize);\n\n  return (\n    <Flex justifyContent=\"center\" my=\"100px\">\n      <Button onClick={loadMore} disabled={isReachingEnd || isLoadingMore}>\n        {isLoadingMore ? (\n          <Spinner />\n        ) : isReachingEnd ? (\n          \"That's all!\"\n        ) : (\n          \"Show more...\"\n        )}\n      </Button>\n    </Flex>\n  );\n}\n","import {Badge, Box, Flex, Image, Text, useColorMode} from \"@chakra-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {Star} from \"react-feather\";\nimport {formatDate} from \"../../../utils/format-date\";\nimport { format as timeAgo } from \"timeago.js\";\nimport React from \"react\";\nimport {Theme} from \"../../../services/styling\";\n\nexport function LaunchItem({ launch, favorites, toggleFavorite }) {\n  const { colorMode } = useColorMode();\n  const isFavorite = () => favorites?.some(item => item.id === launch.flight_number);\n\n  return (\n    <Box\n      as={Link}\n      to={`/launches/${launch.flight_number.toString()}`}\n      boxShadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      position=\"relative\"\n      bg={Theme().bgColorCard[colorMode]}\n      borderColor={Theme().borderColorCard[colorMode]}\n      color={Theme().textColor[colorMode]}\n    >\n      <Image\n        src={\n          launch.links.flickr_images[0]?.replace(\"_o.jpg\", \"_z.jpg\") ??\n          launch.links.mission_patch_small\n        }\n        alt={`${launch.mission_name} launch`}\n        height={[\"200px\", null, \"300px\"]}\n        width=\"100%\"\n        objectFit=\"cover\"\n        objectPosition=\"bottom\"\n      />\n\n      <Image\n        position=\"absolute\"\n        top=\"5\"\n        right=\"5\"\n        src={launch.links.mission_patch_small}\n        height=\"75px\"\n        objectFit=\"contain\"\n        objectPosition=\"bottom\"\n      />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"center\">\n          {launch.launch_success ? (\n            <Badge px=\"2\" variant=\"solid\" variantColor=\"green\">\n              Successful\n            </Badge>\n          ) : (\n            <Badge px=\"2\" variant=\"solid\" variantColor=\"red\">\n              Failed\n            </Badge>\n          )}\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {launch.rocket.rocket_name} &bull; {launch.launch_site.site_name}\n          </Box>\n          <Box as={Star} ml=\"2\" color={isFavorite() ? 'yellow.400': 'gray.300'}\n               onClick={(e) => toggleFavorite(e, launch)}/>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {launch.mission_name}\n        </Box>\n        <Flex>\n          <Text fontSize=\"sm\">{formatDate(launch.launch_date_utc)} </Text>\n          <Text color=\"gray.500\" ml=\"2\" fontSize=\"sm\">\n            {timeAgo(launch.launch_date_utc)}\n          </Text>\n        </Flex>\n      </Box>\n    </Box>\n  );\n}\n","export function formatDate(timestamp) {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  }).format(new Date(timestamp));\n}\n\nexport function formatDateTime(timestamp) {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    timeZoneName: \"short\",\n  }).format(new Date(timestamp));\n}\n\nexport function formatDateTimeLaunch(timestamp) {\n  // eslint-disable-next-line  no-unused-vars\n  const [_, siteDateWithoutTimeZone, siteOffsetString] = timestamp.match(\n    /(^.*)([-]\\d{2}:\\d{2}$)/\n  );\n\n  return new Intl.DateTimeFormat(navigator.language, {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n    }).format(new Date(siteDateWithoutTimeZone)) + ` GMT${siteOffsetString}`;\n}\n","export function toFavorite(item) {\n  return {\n    id: item.site_id ?? item.flight_number,\n    name: item.site_name_long ?? item.mission_name,\n    details: item.details ? item.details.slice(0, 60) + '...' : 'No details provided',\n    type: item.flight_number ? 'Launch' : 'Launch Pad',\n    category: item.flight_number ? 'launches' : 'launch-pads',\n  }\n}\n","import React from \"react\";\nimport {Badge, Box, useColorMode} from \"@chakra-ui/core\";\nimport {Trash2} from \"react-feather\";\nimport {Link} from \"react-router-dom\";\nimport {Theme} from \"../../../services/styling\";\n\nexport default function FavoriteItem({favorite, removeFavorite}) {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Box\n      as={Link}\n      to={`/${favorite.category}/${favorite.id.toString()}`}\n      d=\"flex\"\n      flexDirection=\"column\"\n      boxShadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      position=\"relative\"\n      p=\"4\"\n      mt={6}\n      borderColor={Theme().borderColorCard[colorMode]}\n      bg={Theme().tileColorCard[colorMode]}\n    >\n      <Box d=\"flex\" alignItems=\"baseline\">\n        <Badge px=\"2\" variant=\"solid\" variantColor=\"pink\">\n          {favorite.type}\n        </Badge>\n\n        <Box\n          color=\"gray.700\"\n          fontWeight=\"semibold\"\n          letterSpacing=\"wide\"\n          fontSize=\"xs\"\n          textTransform=\"uppercase\"\n          ml=\"2\"\n        >\n          {favorite.name}\n        </Box>\n      </Box>\n\n      <Box position=\"absolute\" top=\"2\" right=\"2\"\n           height={5} width={5} as={Trash2} ml=\"2\" cursor=\"pointer\"\n           onClick={(e) => removeFavorite(e, favorite)}\n      />\n\n      <Box d=\"flex\" alignItems=\"center\" mt={1} fontSize={14} color=\"gray.500\">{favorite.details}</Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Drawer, DrawerBody, DrawerCloseButton,\n  DrawerContent, DrawerHeader, useColorMode,\n} from \"@chakra-ui/core\";\nimport FavoriteItem from \"../content/favorites/favorite-item\";\nimport {Star} from \"react-feather\";\nimport {Theme} from \"../../services/styling\";\n\nexport function LayoutDrawer({favorites, favBtnRef, isOpen, onClose, removeFavorite, children}) {\n  const {colorMode} = useColorMode();\n\n  return (\n    <Box minH=\"100vh\" bg={Theme().bgColor[colorMode]}>\n      <Drawer\n        autoFocus={false}\n        onOverlayClick={onClose}\n        isOpen={isOpen}\n        placement='right'\n        size='md'\n        onClose={onClose}\n        finalFocusRef={favBtnRef}\n      >\n        <DrawerContent>\n          <DrawerCloseButton/>\n          <DrawerHeader color={Theme().textColor[colorMode]} textAlign=\"center\" borderBottomWidth=\"1px\">Favorites\n            ({(favorites?.length)})</DrawerHeader>\n\n          <DrawerBody>\n            {!!favorites?.length && favorites.map((item) => (\n              <FavoriteItem favorite={item} removeFavorite={removeFavorite} key={item.id}/>\n            ))}\n            {!favorites?.length && <Box d=\"flex\" alignItems=\"center\" flexDirection=\"column\" my={8}>\n              <Box as={Star} height={20} width={20} color=\"yellow.400\"/>\n              <Box as=\"h3\" fontSize={24} my={4}>No favorites yet!</Box>\n            </Box>}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n\n      <Box>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n","import {useEffect, useState} from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === \"undefined\") {\n      return initialValue;\n    }\n\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    try {\n      setStoredValue(storedValue);\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(key, JSON.stringify(storedValue));\n      }\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }, [key, storedValue]);\n\n  return [storedValue, setStoredValue];\n}\n\nexport default useLocalStorage;\n","import React, {useRef} from \"react\";\nimport {\n  Box,\n  Button,\n  SimpleGrid,\n  useDisclosure\n} from \"@chakra-ui/core\";\n\nimport {useSpaceXPaginated} from \"../../../services/use-space-x\";\nimport Error from \"../../base/error\";\nimport Breadcrumbs from \"../../base/breadcrumbs\";\nimport LoadMoreButton from \"../../base/load-more-button\";\nimport {LaunchItem} from \"./launch-item\";\nimport {toFavorite} from \"../../../services/favorites\";\nimport {LayoutDrawer} from \"../../layout/layout-drawer\";\nimport useLocalStorage from \"../../../hooks/use-local-storage\";\n\nconst PAGE_SIZE = 12;\n\nexport default function LaunchesLayout() {\n  const {isOpen, onOpen, onClose} = useDisclosure()\n\n  const favBtnRef = useRef();\n\n  const {data, error, isValidating, setSize, size} = useSpaceXPaginated(\n    \"/launches/past\",\n    {\n      limit: PAGE_SIZE,\n      order: \"desc\",\n      sort: \"launch_date_utc\",\n    }\n  );\n\n  const [favorites, setFavorites] = useLocalStorage('launches', []);\n  const toggleFavorite = (e, launch) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const isFavorite = !!favorites?.find(item => item.id === launch.flight_number);\n    let copy = [...favorites];\n    if (isFavorite) {\n      copy = copy.filter(item => item.id !== launch.flight_number);\n    } else {\n      copy.push(toFavorite(launch));\n    }\n\n    setFavorites(copy);\n  }\n\n  const removeFavorite = (e, favorite) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    let favCopy = favorites?.length ? [...favorites] : [];\n    favCopy = favCopy.filter(item => item.id !== favorite.id);\n    setFavorites(favCopy)\n  };\n\n  return (\n    <LayoutDrawer favorites={favorites} removeFavorite={removeFavorite} isOpen={isOpen}\n                  onClose={onClose} favBtnRef={favBtnRef}>\n      <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\">\n        <Breadcrumbs\n          items={[{label: \"Home\", to: \"/\"}, {label: \"Launches\"}]}\n        />\n        <Button ref={favBtnRef} colorScheme='teal' mr=\"6\" onClick={onOpen}>\n          Favorites ({favorites.length})\n        </Button>\n      </Box>\n      <SimpleGrid m={[2, null, 6]} minChildWidth=\"350px\" spacing=\"4\">\n        {error && <Error/>}\n        {data &&\n        data\n          .flat()\n          .map((launch) => (\n            <LaunchItem launch={launch} toggleFavorite={toggleFavorite} favorites={favorites}\n                        key={launch.flight_number}/>\n          ))}\n      </SimpleGrid>\n      <LoadMoreButton\n        loadMore={() => setSize(size + 1)}\n        data={data}\n        pageSize={PAGE_SIZE}\n        isLoadingMore={isValidating}\n      />\n    </LayoutDrawer>\n  );\n}\n","import React, {forwardRef} from \"react\";\nimport {Tooltip} from \"@chakra-ui/core\";\n\nexport const TooltipWrap = forwardRef((props, ref) => {\n  return (\n    <Tooltip {...props} ref={ref}>\n    </Tooltip>\n  )\n});\n","import React from \"react\";\nimport {useParams, Link as RouterLink} from \"react-router-dom\";\nimport {format as timeAgo} from \"timeago.js\";\nimport {Watch, MapPin, Navigation, Layers, Star} from \"react-feather\";\nimport {\n  Flex,\n  Heading,\n  Badge,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  SimpleGrid,\n  Box,\n  Text,\n  Spinner,\n  Image,\n  Link,\n  Stack,\n  AspectRatioBox,\n  StatGroup, useColorMode,\n} from \"@chakra-ui/core\";\n\nimport {useSpaceX} from \"../../../services/use-space-x\";\nimport {formatDateTime, formatDateTimeLaunch} from \"../../../utils/format-date\";\nimport Error from \"../../base/error\";\nimport Breadcrumbs from \"../../base/breadcrumbs\";\nimport {TooltipWrap} from \"../../base/tooltip\";\nimport {toFavorite} from \"../../../services/favorites\";\nimport useLocalStorage from \"../../../hooks/use-local-storage\";\nimport {Theme} from \"../../../services/styling\";\n\nexport default function Launch() {\n  const {colorMode} = useColorMode();\n  let {launchId} = useParams();\n  const {data: launch, error} = useSpaceX(`/launches/${launchId}`);\n\n  if (error) return <Error/>;\n  if (!launch) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <Spinner size=\"lg\"/>\n      </Flex>\n    );\n  }\n\n  return (\n    <Box color={Theme().textColor[colorMode]} bg={Theme().bgColor[colorMode]}>\n      <Breadcrumbs\n        items={[\n          {label: \"Home\", to: \"/\"},\n          {label: \"Launches\", to: \"..\"},\n          {label: `#${launch.flight_number}`},\n        ]}\n      />\n      <Header launch={launch}/>\n      <Box m={[3, 6]}>\n        <TimeAndLocation launch={launch}/>\n        <RocketInfo launch={launch}/>\n        <Text color={Theme().textColor[colorMode]} fontSize={[\"md\", null, \"lg\"]} my=\"8\">\n          {launch.details}\n        </Text>\n        <Video launch={launch}/>\n        <Gallery images={launch.links.flickr_images}/>\n      </Box>\n    </Box>\n  );\n}\n\nfunction Header({launch}) {\n  const [favorites, setFavorites] = useLocalStorage('launches');\n\n  const isFavorite = () => favorites?.some(item => item.id === launch.flight_number);\n\n  const toggleFavorite = (launch) => {\n    let copy = [...favorites];\n    if (isFavorite()) {\n      copy = copy.filter(item => item.id !== launch.flight_number);\n    } else {\n      copy.push(toFavorite(launch));\n    }\n\n    setFavorites(copy);\n  }\n\n  return (\n    <Flex\n      bgImage={`url(${launch.links.flickr_images[0]})`}\n      bgPos=\"center\"\n      bgSize=\"cover\"\n      bgRepeat=\"no-repeat\"\n      minHeight=\"30vh\"\n      position=\"relative\"\n      p={[2, 6]}\n      alignItems=\"flex-end\"\n      justifyContent=\"space-between\"\n    >\n      <Image\n        position=\"absolute\"\n        top=\"5\"\n        right=\"5\"\n        src={launch.links.mission_patch_small}\n        height={[\"85px\", \"150px\"]}\n        objectFit=\"contain\"\n        objectPosition=\"bottom\"\n      />\n      <Heading\n        color=\"white\"\n        display=\"inline\"\n        backgroundColor=\"#718096b8\"\n        fontSize={[\"lg\", \"5xl\"]}\n        px=\"4\"\n        py=\"2\"\n        borderRadius=\"lg\"\n      >\n        {launch.mission_name}\n        <Box as={Star} ml=\"2\" height={8} width={8} cursor=\"pointer\" display=\"inline-flex\"\n             color={isFavorite() ? 'yellow.400' : 'black.900'} onClick={() => toggleFavorite(launch)}/>\n      </Heading>\n      <Stack isInline spacing=\"3\">\n        <Badge variantColor=\"purple\" fontSize={[\"xs\", \"md\"]}>\n          #{launch.flight_number}\n        </Badge>\n        {launch.launch_success ? (\n          <Badge variantColor=\"green\" fontSize={[\"xs\", \"md\"]}>\n            Successful\n          </Badge>\n        ) : (\n          <Badge variantColor=\"red\" fontSize={[\"xs\", \"md\"]}>\n            Failed\n          </Badge>\n        )}\n      </Stack>\n    </Flex>\n  );\n}\n\nfunction TimeAndLocation({launch}) {\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Watch} width=\"1em\"/>{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Launch Date\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>\n          <TooltipWrap placement=\"top\" label={formatDateTime(launch.launch_date_local)}>\n            {formatDateTimeLaunch(launch.launch_date_local)}\n          </TooltipWrap>\n        </StatNumber>\n        <StatHelpText>{timeAgo(launch.launch_date_utc)}</StatHelpText>\n      </Stat>\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={MapPin} width=\"1em\"/>{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Launch Site\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>\n          <Link\n            as={RouterLink}\n            to={`/launch-pads/${launch.launch_site.site_id}`}\n          >\n            {launch.launch_site.site_name_long}\n          </Link>\n        </StatNumber>\n        <StatHelpText>{launch.launch_site.site_name}</StatHelpText>\n      </Stat>\n    </SimpleGrid>\n  );\n}\n\nfunction RocketInfo({launch}) {\n  const cores = launch.rocket.first_stage.cores;\n\n  return (\n    <SimpleGrid\n      columns={[1, 1, 2]}\n      borderWidth=\"1px\"\n      mt=\"4\"\n      p=\"4\"\n      borderRadius=\"md\"\n    >\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Navigation} width=\"1em\"/>{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Rocket\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>\n          {launch.rocket.rocket_name}\n        </StatNumber>\n        <StatHelpText>{launch.rocket.rocket_type}</StatHelpText>\n      </Stat>\n      <StatGroup>\n        <Stat>\n          <StatLabel display=\"flex\">\n            <Box as={Layers} width=\"1em\"/>{\" \"}\n            <Box ml=\"2\" as=\"span\">\n              First Stage\n            </Box>\n          </StatLabel>\n          <StatNumber fontSize={[\"md\", \"xl\"]}>\n            {cores.map((core) => core.core_serial).join(\", \")}\n          </StatNumber>\n          <StatHelpText>\n            {cores.every((core) => core.land_success)\n              ? cores.length === 1\n                ? \"Recovered\"\n                : \"All recovered\"\n              : \"Lost\"}\n          </StatHelpText>\n        </Stat>\n        <Stat>\n          <StatLabel display=\"flex\">\n            <Box as={Layers} width=\"1em\"/>{\" \"}\n            <Box ml=\"2\" as=\"span\">\n              Second Stage\n            </Box>\n          </StatLabel>\n          <StatNumber fontSize={[\"md\", \"xl\"]}>\n            Block {launch.rocket.second_stage.block}\n          </StatNumber>\n          <StatHelpText>\n            Payload:{\" \"}\n            {launch.rocket.second_stage.payloads\n              .map((payload) => payload.payload_type)\n              .join(\", \")}\n          </StatHelpText>\n        </Stat>\n      </StatGroup>\n    </SimpleGrid>\n  );\n}\n\nfunction Video({launch}) {\n  return (\n    <AspectRatioBox maxH=\"400px\" ratio={1.7}>\n      <Box\n        as=\"iframe\"\n        title={launch.mission_name}\n        src={`https://www.youtube.com/embed/${launch.links.youtube_id}`}\n        allowFullScreen\n      />\n    </AspectRatioBox>\n  );\n}\n\nfunction Gallery({images}) {\n  return (\n    <SimpleGrid my=\"6\" minChildWidth=\"350px\" spacing=\"4\">\n      {images.map((image) => (\n        <a href={image} key={image}>\n          <Image src={image.replace(\"_o.jpg\", \"_z.jpg\")}/>\n        </a>\n      ))}\n    </SimpleGrid>\n  );\n}\n","import React from \"react\";\nimport {Flex, Box, Text, Stack, Link, useColorMode} from \"@chakra-ui/core\";\nimport {ArrowRight} from \"react-feather\";\nimport {Link as BrowserLink} from \"react-router-dom\";\nimport {Theme} from \"../../../services/styling\";\n\nexport default function Home() {\n  const {colorMode} = useColorMode();\n\n  return (\n    <Box minHeight=\"100vh\" p={4} bg={Theme().bgColor[colorMode]}>\n      <Stack m=\"6\" spacing=\"6\">\n        <PageLink url=\"/launches\" borderColor={Theme().borderColorCard[colorMode]}\n                  bg={Theme().tileColorCard[colorMode]}>Browse SpaceX Launches</PageLink>\n        <PageLink url=\"/launch-pads\" borderColor={Theme().borderColorCard[colorMode]}\n                  bg={Theme().tileColorCard[colorMode]}>Browse SpaceX Launch Pads</PageLink>\n      </Stack>\n    </Box>\n  );\n}\n\nfunction PageLink({url, children, ...rest}) {\n  return (\n    <Link as={BrowserLink}\n          to={url} {...rest}>\n      <Flex\n        justifyContent=\"space-between\"\n        p=\"6\"\n        boxShadow=\"md\"\n        borderWidth=\"1px\"\n        rounded=\"lg\"\n      >\n        <Text fontSize=\"lg\">{children}</Text>\n        <Box as={ArrowRight}/>\n      </Flex>\n    </Link>\n  );\n}\n","import {Badge, Box, Text, useColorMode} from \"@chakra-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {Star} from \"react-feather\";\nimport {Theme} from \"../../../services/styling\";\n\nexport function LaunchPadItem({launchPad, favorites, toggleFavorite}) {\n  const {colorMode} = useColorMode();\n  const isFavorite = () => !!favorites?.find(item => item.id === launchPad.site_id);\n\n  return (\n    <Box\n      as={Link}\n      to={`/launch-pads/${launchPad.site_id}`}\n      boxShadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      position=\"relative\"\n      borderColor={Theme().borderColorCard[colorMode]}\n      bg={Theme().tileColorCard[colorMode]}\n    >\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"center\">\n          {launchPad.status === \"active\" ? (\n            <Badge px=\"2\" variant=\"solid\" variantColor=\"green\">\n              Active\n            </Badge>\n          ) : (\n            <Badge px=\"2\" variant=\"solid\" variantColor=\"red\">\n              Retired\n            </Badge>\n          )}\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {launchPad.attempted_launches} attempted &bull;{\" \"}\n            {launchPad.successful_launches} succeeded\n          </Box>\n          <Box as={Star} ml=\"2\" color={isFavorite() ? 'yellow.400' : 'gray.300'}\n               onClick={(e) => toggleFavorite(e, launchPad)}/>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {launchPad.name}\n        </Box>\n        <Text color=\"gray.500\" fontSize=\"sm\">\n          {launchPad.vehicles_launched.join(\", \")}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n","import React, {useRef} from \"react\";\nimport {\n  Box, Button,\n  SimpleGrid,\n  useDisclosure\n} from \"@chakra-ui/core\";\n\nimport Error from \"../../base/error\";\nimport Breadcrumbs from \"../../base/breadcrumbs\";\nimport LoadMoreButton from \"../../base/load-more-button\";\nimport {useSpaceXPaginated} from \"../../../services/use-space-x\";\nimport {toFavorite} from \"../../../services/favorites\";\nimport {LaunchPadItem} from \"./launch-pad-item\";\nimport useLocalStorage from \"../../../hooks/use-local-storage\";\nimport {LayoutDrawer} from \"../../layout/layout-drawer\";\n\nconst PAGE_SIZE = 12;\n\nexport default function LaunchPads() {\n  const {isOpen, onOpen, onClose} = useDisclosure();\n  const favBtnRef = useRef();\n\n  const {data, error, isValidating, size, setSize} = useSpaceXPaginated(\n    \"/launchpads\",\n    {\n      limit: PAGE_SIZE,\n    }\n  );\n\n  const [favorites, setFavorites] = useLocalStorage('launch-pads', []);\n  const toggleFavorite = (e, launchPad) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const isFavorite = !!favorites?.find(item => item.id === launchPad.site_id);\n    let copy = [...favorites];\n    if (isFavorite) {\n      copy = copy.filter(item => item.id !== launchPad.site_id);\n    } else {\n      copy.push(toFavorite(launchPad));\n    }\n\n    setFavorites(copy);\n  }\n\n  const removeFavorite = (e, favorite) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    let favCopy = favorites?.length ? [...favorites] : [];\n    favCopy = favCopy.filter(item => item.id !== favorite.id);\n    setFavorites(favCopy)\n  };\n\n  return (\n    <LayoutDrawer favorites={favorites} removeFavorite={removeFavorite} isOpen={isOpen}\n                  onClose={onClose} favBtnRef={favBtnRef}>\n      <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\">\n        <Breadcrumbs\n          items={[{label: \"Home\", to: \"/\"}, {label: \"Launch Pads\"}]}\n        />\n        <Button ref={favBtnRef} colorScheme='teal' mr=\"6\" onClick={onOpen}>\n          Favorites ({favorites.length})\n        </Button>\n      </Box>\n      <SimpleGrid m={[2, null, 6]} minChildWidth=\"350px\" spacing=\"4\">\n        {error && <Error/>}\n        {data && data.flat().map((launchPad) => (\n          <LaunchPadItem key={launchPad.site_id} launchPad={launchPad} favorites={favorites}\n                         toggleFavorite={toggleFavorite}/>\n        ))}\n      </SimpleGrid>\n      <LoadMoreButton\n        loadMore={() => setSize(size + 1)}\n        data={data}\n        pageSize={PAGE_SIZE}\n        isLoadingMore={isValidating}\n      />\n    </LayoutDrawer>\n  );\n}\n","import React from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {MapPin, Navigation, Star} from \"react-feather\";\nimport {\n  Flex,\n  Heading,\n  Badge,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  SimpleGrid,\n  Box,\n  Text,\n  Spinner,\n  Stack,\n  AspectRatioBox, useColorMode,\n} from \"@chakra-ui/core\";\n\nimport {useSpaceX} from \"../../../services/use-space-x\";\nimport Error from \"../../base/error\";\nimport Breadcrumbs from \"../../base/breadcrumbs\";\nimport {LaunchItem} from \"../launches/launch-item\";\nimport {toFavorite} from \"../../../services/favorites\";\nimport useLocalStorage from \"../../../hooks/use-local-storage\";\nimport {Theme} from \"../../../services/styling\";\n\nexport default function LaunchPad() {\n  const {colorMode} = useColorMode();\n  let {launchPadId} = useParams();\n  const {data: launchPad, error} = useSpaceX(`/launchpads/${launchPadId}`);\n\n  const {data: launches} = useSpaceX(launchPad ? \"/launches/past\" : null, {\n    limit: 3,\n    order: \"desc\",\n    sort: \"launch_date_utc\",\n    site_id: launchPad?.site_id,\n  });\n\n  if (error) return <Error/>;\n  if (!launchPad) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <Spinner size=\"lg\"/>\n      </Flex>\n    );\n  }\n\n  return (\n    <Box  bg={Theme().bgColor[colorMode]} color={Theme().textColor[colorMode]}>\n      <Breadcrumbs\n        items={[\n          {label: \"Home\", to: \"/\"},\n          {label: \"Launch Pads\", to: \"..\"},\n          {label: launchPad.name},\n        ]}\n      />\n      <Header launchPad={launchPad}/>\n      <Box m={[3, 6]}>\n        <LocationAndVehicles launchPad={launchPad}/>\n        <Text color={Theme().textColor[colorMode]} fontSize={[\"md\", null, \"lg\"]} my=\"8\">\n          {launchPad.details}\n        </Text>\n        <Map location={launchPad.location}/>\n        <RecentLaunches launches={launches}/>\n      </Box>\n    </Box>\n  );\n}\n\nconst randomColor = (start = 200, end = 250) =>\n  `hsl(${start + end * Math.random()}, 80%, 90%)`;\n\nfunction Header({launchPad}) {\n  const [favorites, setFavorites] = useLocalStorage('launch-pads');\n\n  const isFavorite = () => favorites?.some(item => item.id === launchPad.site_id);\n\n  const toggleFavorite = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    console.log(launchPad)\n    let copy = [...favorites];\n    if (isFavorite()) {\n      copy = copy.filter(item => item.id !== launchPad.site_id);\n    } else {\n      copy.push(toFavorite(launchPad));\n    }\n\n    setFavorites(copy);\n  }\n\n  return (\n    <Flex\n      background={`linear-gradient(${randomColor()}, ${randomColor()})`}\n      bgPos=\"center\"\n      bgSize=\"cover\"\n      bgRepeat=\"no-repeat\"\n      minHeight=\"15vh\"\n      position=\"relative\"\n      flexDirection={[\"column\", \"row\"]}\n      p={[2, 6]}\n      alignItems=\"flex-end\"\n      justifyContent=\"space-between\"\n    >\n      <Heading\n        color=\"gray.900\"\n        display=\"inline\"\n        mx={[2, 4]}\n        my=\"2\"\n        fontSize={[\"md\", \"3xl\"]}\n        borderRadius=\"lg\"\n      >\n        {launchPad.site_name_long}\n        <Box as={Star} ml=\"2\" height={8} width={8} cursor=\"pointer\" display=\"inline-flex\"\n             color={isFavorite() ? 'yellow.400' : 'black.900'} onClick={toggleFavorite}/>\n      </Heading>\n      <Stack isInline spacing=\"3\">\n        <Badge variantColor=\"purple\" fontSize={[\"sm\", \"md\"]}>\n          {launchPad.successful_launches}/{launchPad.attempted_launches}{\" \"}\n          successful\n        </Badge>\n        {launchPad.stats === \"active\" ? (\n          <Badge variantColor=\"green\" fontSize={[\"sm\", \"md\"]}>\n            Active\n          </Badge>\n        ) : (\n          <Badge variantColor=\"red\" fontSize={[\"sm\", \"md\"]}>\n            Retired\n          </Badge>\n        )}\n      </Stack>\n    </Flex>\n  );\n}\n\nfunction LocationAndVehicles({launchPad}) {\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={MapPin} width=\"1em\"/>{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Location\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize=\"xl\">{launchPad.location.name}</StatNumber>\n        <StatHelpText>{launchPad.location.region}</StatHelpText>\n      </Stat>\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Navigation} width=\"1em\"/>{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Vehicles\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize=\"xl\">\n          {launchPad.vehicles_launched.join(\", \")}\n        </StatNumber>\n      </Stat>\n    </SimpleGrid>\n  );\n}\n\nfunction Map({location}) {\n  return (\n    <AspectRatioBox ratio={16 / 5}>\n      <Box\n        as=\"iframe\"\n        src={`https://maps.google.com/maps?q=${location.latitude}, ${location.longitude}&z=15&output=embed`}\n        alt=\"demo\"\n      />\n    </AspectRatioBox>\n  );\n}\n\nfunction RecentLaunches({launches}) {\n  const [favorites, setFavorites] = useLocalStorage('launches');\n  const toggleFavorite = (e, launch) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const isFavorite = !!favorites?.find(item => item.id === launch.id);\n    let copy = [...favorites];\n    if (isFavorite) {\n      copy = copy.filter(item => item.id !== launch.id);\n    } else {\n      copy.push(toFavorite(launch));\n    }\n\n    setFavorites(copy);\n  }\n\n  if (!launches?.length) {\n    return null;\n  }\n  return (\n    <Stack py=\"8\" spacing=\"3\">\n      <Text fontSize=\"xl\" fontWeight=\"bold\">\n        Last launches\n      </Text>\n      <SimpleGrid minChildWidth=\"350px\" spacing=\"4\">\n        {launches.map((launch) => (\n          <LaunchItem favorites={favorites} launch={launch} key={launch.flight_number} toggleFavorite={toggleFavorite}/>\n        ))}\n      </SimpleGrid>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport {Button, Flex, Text, useColorMode, ThemeProvider, ColorModeProvider} from \"@chakra-ui/core\";\n\nimport Launches from \"./content/launches/launches\";\nimport Launch from \"./content/launches/launch\";\nimport Home from \"./pages/home/home\";\nimport LaunchPads from \"./content/launch-pads/launch-pads\";\nimport LaunchPad from \"./content/launch-pads/launch-pad\";\nimport {Moon, Sun} from \"react-feather\";\nimport {Theme} from \"../services/styling\";\nimport {useTheme} from \"emotion-theming\";\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={useTheme()}>\n      <ColorModeProvider>\n        <NavBar />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/launches\" element={<Launches />} />\n            <Route path=\"/launches/:launchId\" element={<Launch />} />\n            <Route path=\"/launch-pads\" element={<LaunchPads />} />\n            <Route path=\"/launch-pads/:launchPadId\" element={<LaunchPad />} />\n          </Routes>\n      </ColorModeProvider>\n    </ThemeProvider>\n  );\n}\n\nfunction NavBar() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"6\"\n      bg={Theme().bgColorNavbar[colorMode]}\n      color=\"white\"\n    >\n      <Text\n        fontFamily=\"mono\"\n        letterSpacing=\"2px\"\n        fontWeight=\"bold\"\n        fontSize=\"lg\"\n      >\n        ¡SPACE·R0CKETS!\n      </Text>\n\n      <Button as={colorMode === 'light' ? Moon : Sun} onClick={toggleColorMode}\n              bg={Theme().bgColorButton[colorMode]} _hover={Theme().bgColorButton[colorMode]} height={12} width={12} cursor=\"pointer\" p={3}/>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\n\nimport App from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ThemeProvider>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}